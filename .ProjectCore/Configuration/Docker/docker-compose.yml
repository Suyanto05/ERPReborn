version: '3.5'


#---> Docker Services
services:
  #---> Services : PHP Apache FrontEnd
  php-apache-frontend:
    container_name: 'php-apache-frontend'
    build:
      context: '.'
      dockerfile: './.ProjectCore/Configuration/Docker/PHPApacheFrontEnd/Dockerfile'
    image: 'erp-reborn-phpapache-frontend'
    depends_on:
      - 'php-apache-backend'
    restart: 'unless-stopped'
    tty: 'true'
    ports:
      - '20080:80'
    networks:
      app-network:
        ipv4_address: '172.28.0.4'
    volumes:
      - './Programming/.LaravelCore:/var/www/html/.LaravelCore'
      - './Programming/WebFrontEnd:/var/www/html/WebFrontEnd'


  #---> Services : PHP Apache BackEnd
  php-apache-backend:
    container_name: 'php-apache-backend'
    build:
      context: '.'
      dockerfile: './.ProjectCore/Configuration/Docker/PHPApacheBackEnd/Dockerfile'
    image: 'erp-reborn-phpapache-backend'
    depends_on:
      - 'db-postgresql'
      - 'redis'
      - 'pgadmin4'
      - 'minio'
    restart: 'unless-stopped'
    tty: 'true'
    ports:
      - '10080:80'
    networks:
      app-network:
        ipv4_address: '172.28.0.3'
    volumes:
      #- './:/var/www/html'
      - './Programming/.LaravelCore:/var/www/html/.LaravelCore'
      - './Programming/WebBackEnd:/var/www/html/WebBackEnd'
        #- './.ProjectCore/PermanentStorage/PHPApacheBackEnd/zhtConf/log/scheduledTask:/zhtConf/log/scheduledTask'
      - './.ProjectCore/PermanentStorage/PHPApacheBackEnd/zhtConf/log/lastSession/cron.d:/zhtConf/log/lastSession/cron.d'
      - './.ProjectCore/PermanentStorage/PHPApacheBackEnd/zhtConf/log/lastSession/scheduledTask:/zhtConf/log/lastSession/scheduledTask'
      - './.ProjectCore/PermanentStorage/PHPApacheBackEnd/zhtConf/tmp/download:/zhtConf/tmp/download'
      - './.ProjectCore/PermanentStorage/PHPApacheBackEnd/zhtConf/Script:/zhtConf/Script'
      - './.ProjectCore/Configuration/Docker/PHPApacheBackEnd/System/etc/odbc.ini:/etc/odbc.ini'
        #- './.ProjectCore/Configuration/Docker/PHPApacheBackEnd/System/etc/cron.d:/etc/cron.d'
        #- './.ProjectCore/Configuration/Docker/PHPApacheBackEnd/System/etc/cron.d/cron_Script_ImportFile_SCP_SwingBarrierGate_sh:/etc/cron.d/cron_Script_ImportFile_SCP_SwingBarrierGate_sh'
        #- './.ProjectCore/Configuration/Docker/PHPApacheBackEnd/System/etc/cron.d/cron_Script_Laravel_ArtisanScheduleRun_sh:/etc/cron.d/cron_Script_Laravel_ArtisanScheduleRun_sh'
        #- './.ProjectCore/Configuration/Docker/PHPApacheBackEnd/System/etc/cron.d/cron.Script.Laravel.ArtisanScheduleRun.sh:/etc/cron.d/cron.Script.Laravel.ArtisanScheduleRun.sh'
      - './.ProjectCore/Configuration/Docker/PHPApacheBackEnd/Script.ServiceRestart.sh:/usr/local/bin/Script.ServiceRestart.sh'
#    links:
#      - 'db-postgresql'
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
#      DB_CONNECTION: 'pgsql'
#      DB_HOST: 'db-postgresql'
#      DB_PORT: 5432
#      DB_DATABASE: 'dbERPReborn'
#      DB_USERNAME: 'SysEngine'
#      DB_PASSWORD: '748159263'


  #---> Services : PostgreSQL Database
  db-postgresql:
    container_name: 'postgresql'
    #image: 'postgres'
    image: 'erp-reborn-postgresql'
    restart: 'unless-stopped'
    ports:
      - '15432:5432'
      - '13306:3306'
    networks:
      app-network:
        ipv4_address: '172.28.0.2'
    volumes:
      - 'volume-mysql:/var/lib/mysql'
      - './.ProjectCore/Temp/MySQL/:/var/lib/mysql/temp'
      #- 'volume-postgresql:/var/lib/postgresql/data'
      - './.ProjectCore/PermanentStorage/PostgreSQL/var/lib/postgresql/data/:/var/lib/postgresql/data'
      - './.ProjectCore/Temp/PostgreSQL/:/var/lib/postgresql/temp'
      - './.ProjectCore/Configuration/Docker/PostgreSQL/Script.ServiceRestart.sh:/usr/local/bin/Script.ServiceRestart.sh'
        #command: bash -c "Script.ServiceRestart.sh && tail -f /dev/null"
        #    command: nohup Script.ServiceRestart.sh & && sleep infinity
    environment:
      POSTGRES_DB: 'postgres'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '748159263'
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'SysEngine'
      MYSQL_PASSWORD: '748159263'
      MYSQL_ROOT_PASSWORD: '748159263'
      TZ: 'Asia/Jakarta'
        #TZ: 'GMT+7'
        #PGTZ: 'GMT+7'
      #PG_MODE=primary
      #PG_PRIMARY_USER=postgres
      #PG_PRIMARY_PASSWORD=yoursecurepassword
      #PG_DATABASE=testdb
      #PG_USER=yourusername
      #PG_PASSWORD=yoursecurepassword
      #PG_ROOT_PASSWORD=yoursecurepassword
      #PG_PRIMARY_PORT=5432


  #---> Services : Redis
  redis:
    container_name: 'redis'
    image: 'redis:latest'
    restart: 'unless-stopped'
    ports:
      - '16379:6379'
    networks:
      app-network:
        ipv4_address: '172.28.0.5'
    volumes:
      #- './.ZhtData/Redis/data/:/data'
      - 'volume-redis:/data'


  #---> Services : PGAdmin4
  pgadmin4:
    container_name: 'pgadmin4'
    image: 'dpage/pgadmin4:latest'
    restart: 'unless-stopped'
    ports:
      - '15050:80'
    networks:
      app-network:
        ipv4_address: '172.28.0.6'
    volumes:
      - 'volume-pgadmin4:/var/lib/pgadmin'
    environment:
      PGADMIN_DEFAULT_EMAIL: 'pt.qdc.technologies@gmail.com'
      PGADMIN_DEFAULT_PASSWORD: 'qu1d151t3chn0'


  #---> Services : Minio
  minio:
    container_name: 'minio'
    image: 'minio/minio:latest'
    restart: 'unless-stopped'
    ports:
      - '19000:9000'
    networks:
      app-network:
        ipv4_address: '172.28.0.7'
    volumes:
      - './.ProjectCore/PermanentStorage/MinIO/:/data'
    environment:
      MINIO_ACCESS_KEY: 'AKIAIOSFODNN7EXAMPLE'
      MINIO_SECRET_KEY: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'
    command: server /data
    restart: always


  #---> Services : Samba
  samba:
    container_name: 'samba'
    image: 'erp-reborn-samba'
    restart: 'unless-stopped'
    ports:
      - '10053:53'
      - '10053:53/udp'
      - '10088:88'
      - '10088:88/udp'
      - '10135:135'
      - '10137:137'
      - '10138:138/udp'
      - '10139:139'
      - '10389:389'
      - '10389:389/udp'
      - '10445:445'
      - '10464:464'
      - '10464:464/udp'
      - '10636:636'
      - '11024:1024'
      - '11025:1025'
      - '11026:1026'
      - '11027:1027'
      - '11028:1028'
      - '11029:1029'
      - '11030:1030'
      - '11031:1031'
      - '11032:1032'
      - '11033:1033'
      - '11034:1034'
      - '11035:1035'
      - '11036:1036'
      - '11037:1037'
      - '11038:1038'
      - '11039:1039'
      - '11040:1040'
      - '11041:1041'
      - '11042:1042'
      - '11043:1043'
      - '11044:1044'
      - '13268:3268'
      - '13269:3269'
    networks:
      app-network:
        ipv4_address: '172.28.0.8'
    volumes:
      - './.ProjectCore/PermanentStorage/Samba/etc/localtime:/etc/localtime:ro'
      - './.ProjectCore/PermanentStorage/Samba/data:/var/lib/samba'
      - './.ProjectCore/PermanentStorage/Samba/config/samba:/etc/samba/external'
      - './.ProjectCore/Configuration/Docker/Samba/Script.ServiceRestart.sh:/usr/local/bin/Script.ServiceRestart.sh'
    environment:
      - DOMAIN=QDC-FILES.QDC.CO.ID
      - DOMAINPASS=qu1d151t3chn0aNbOcPdQeRfSgThUiVjWkXlYmZ
        #- JOIN=true
      - DNSFORWARDER=192.168.1.1
        #- MULTISITE=true
      - NOCOMPLEXITY=true
      - INSECURELDAP=false
      - HOSTIP=172.28.0.8
    dns_search:
      - qdc.co.id
    hostname: localdc
    cap_add:
      - NET_ADMIN
    privileged: true
    tty: true


  #---> Services : Grafana
  grafana:
    container_name: 'grafana'
    image: 'grafana/grafana:latest'
    depends_on:
      - 'db-postgresql'
      - 'minio'
      - 'pgadmin4'
      - 'php-apache-backend'
      - 'php-apache-frontend'
      - 'redis'
    restart: 'unless-stopped'
    ports:
      - '13000:3000'
    networks:
      app-network:
        ipv4_address: '172.28.0.9'
    volumes:
      #- './.ProjectCore/PermanentStorage/Grafana/etc/grafana/provisioning:/etc/grafana/provisioning'
      - './.ProjectCore/PermanentStorage/Grafana/var/lib/grafana/:/var/lib/grafana'
      - './.ProjectCore/PermanentStorage/Grafana/var/log/grafana/:/var/log/grafana'


#---> Docker Volumes
volumes:
  volume-mysql:
    external: true
  volume-postgresql:
    external: true
  volume-pgadmin4:
    external: true
  volume-redis:
    external: true


#---> Docker Networks
networks:
  app-network:
    ipam:
      driver: 'default'
      config:
       - subnet: '172.28.0.0/16'
